// Generated by view binder compiler. Do not edit!
package com.gdscsc.mybaby.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.gdscsc.mybaby.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FeaturedItemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView courseAdd;

  @NonNull
  public final ImageView courseIcon;

  @NonNull
  public final ImageView courseImage;

  @NonNull
  public final ImageView courseInstructor;

  @NonNull
  public final TextView courseName;

  @NonNull
  public final TextView courseSteps;

  @NonNull
  public final TextView courseSubject;

  @NonNull
  public final ConstraintLayout featuredItem;

  @NonNull
  public final Guideline guideline;

  private FeaturedItemBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView courseAdd,
      @NonNull ImageView courseIcon, @NonNull ImageView courseImage,
      @NonNull ImageView courseInstructor, @NonNull TextView courseName,
      @NonNull TextView courseSteps, @NonNull TextView courseSubject,
      @NonNull ConstraintLayout featuredItem, @NonNull Guideline guideline) {
    this.rootView = rootView;
    this.courseAdd = courseAdd;
    this.courseIcon = courseIcon;
    this.courseImage = courseImage;
    this.courseInstructor = courseInstructor;
    this.courseName = courseName;
    this.courseSteps = courseSteps;
    this.courseSubject = courseSubject;
    this.featuredItem = featuredItem;
    this.guideline = guideline;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FeaturedItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FeaturedItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.featured_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FeaturedItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.course_add;
      ImageView courseAdd = ViewBindings.findChildViewById(rootView, id);
      if (courseAdd == null) {
        break missingId;
      }

      id = R.id.course_icon;
      ImageView courseIcon = ViewBindings.findChildViewById(rootView, id);
      if (courseIcon == null) {
        break missingId;
      }

      id = R.id.course_image;
      ImageView courseImage = ViewBindings.findChildViewById(rootView, id);
      if (courseImage == null) {
        break missingId;
      }

      id = R.id.course_instructor;
      ImageView courseInstructor = ViewBindings.findChildViewById(rootView, id);
      if (courseInstructor == null) {
        break missingId;
      }

      id = R.id.course_name;
      TextView courseName = ViewBindings.findChildViewById(rootView, id);
      if (courseName == null) {
        break missingId;
      }

      id = R.id.course_steps;
      TextView courseSteps = ViewBindings.findChildViewById(rootView, id);
      if (courseSteps == null) {
        break missingId;
      }

      id = R.id.course_subject;
      TextView courseSubject = ViewBindings.findChildViewById(rootView, id);
      if (courseSubject == null) {
        break missingId;
      }

      ConstraintLayout featuredItem = (ConstraintLayout) rootView;

      id = R.id.guideline;
      Guideline guideline = ViewBindings.findChildViewById(rootView, id);
      if (guideline == null) {
        break missingId;
      }

      return new FeaturedItemBinding((ConstraintLayout) rootView, courseAdd, courseIcon,
          courseImage, courseInstructor, courseName, courseSteps, courseSubject, featuredItem,
          guideline);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
