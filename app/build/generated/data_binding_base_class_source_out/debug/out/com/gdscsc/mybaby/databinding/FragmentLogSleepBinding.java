// Generated by view binder compiler. Do not edit!
package com.gdscsc.mybaby.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.gdscsc.mybaby.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textview.MaterialTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentLogSleepBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton btnSleepTimeEnd;

  @NonNull
  public final MaterialButton btnSleepTimeStart;

  @NonNull
  public final MaterialTextView tvNursingTime;

  @NonNull
  public final MaterialTextView tvNursingTime2;

  @NonNull
  public final MaterialTextView tvSleepNote;

  private FragmentLogSleepBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton btnSleepTimeEnd, @NonNull MaterialButton btnSleepTimeStart,
      @NonNull MaterialTextView tvNursingTime, @NonNull MaterialTextView tvNursingTime2,
      @NonNull MaterialTextView tvSleepNote) {
    this.rootView = rootView;
    this.btnSleepTimeEnd = btnSleepTimeEnd;
    this.btnSleepTimeStart = btnSleepTimeStart;
    this.tvNursingTime = tvNursingTime;
    this.tvNursingTime2 = tvNursingTime2;
    this.tvSleepNote = tvSleepNote;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentLogSleepBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentLogSleepBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_log_sleep, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentLogSleepBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnSleepTimeEnd;
      MaterialButton btnSleepTimeEnd = ViewBindings.findChildViewById(rootView, id);
      if (btnSleepTimeEnd == null) {
        break missingId;
      }

      id = R.id.btnSleepTimeStart;
      MaterialButton btnSleepTimeStart = ViewBindings.findChildViewById(rootView, id);
      if (btnSleepTimeStart == null) {
        break missingId;
      }

      id = R.id.tvNursingTime;
      MaterialTextView tvNursingTime = ViewBindings.findChildViewById(rootView, id);
      if (tvNursingTime == null) {
        break missingId;
      }

      id = R.id.tvNursingTime2;
      MaterialTextView tvNursingTime2 = ViewBindings.findChildViewById(rootView, id);
      if (tvNursingTime2 == null) {
        break missingId;
      }

      id = R.id.tvSleepNote;
      MaterialTextView tvSleepNote = ViewBindings.findChildViewById(rootView, id);
      if (tvSleepNote == null) {
        break missingId;
      }

      return new FragmentLogSleepBinding((ConstraintLayout) rootView, btnSleepTimeEnd,
          btnSleepTimeStart, tvNursingTime, tvNursingTime2, tvSleepNote);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
