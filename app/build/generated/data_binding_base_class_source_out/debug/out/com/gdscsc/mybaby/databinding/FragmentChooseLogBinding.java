// Generated by view binder compiler. Do not edit!
package com.gdscsc.mybaby.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.gdscsc.mybaby.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentChooseLogBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton btnChangeDiaper;

  @NonNull
  public final MaterialButton btnNursing;

  @NonNull
  public final MaterialButton btnSleep;

  private FragmentChooseLogBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton btnChangeDiaper, @NonNull MaterialButton btnNursing,
      @NonNull MaterialButton btnSleep) {
    this.rootView = rootView;
    this.btnChangeDiaper = btnChangeDiaper;
    this.btnNursing = btnNursing;
    this.btnSleep = btnSleep;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentChooseLogBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentChooseLogBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_choose_log, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentChooseLogBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnChangeDiaper;
      MaterialButton btnChangeDiaper = ViewBindings.findChildViewById(rootView, id);
      if (btnChangeDiaper == null) {
        break missingId;
      }

      id = R.id.btnNursing;
      MaterialButton btnNursing = ViewBindings.findChildViewById(rootView, id);
      if (btnNursing == null) {
        break missingId;
      }

      id = R.id.btnSleep;
      MaterialButton btnSleep = ViewBindings.findChildViewById(rootView, id);
      if (btnSleep == null) {
        break missingId;
      }

      return new FragmentChooseLogBinding((ConstraintLayout) rootView, btnChangeDiaper, btnNursing,
          btnSleep);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
